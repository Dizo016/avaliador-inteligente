{"ast":null,"code":"var _jsxFileName = \"/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/CriarProvaIA.jsx\",\n  _s = $RefreshSig$();\n// src/components/CriarProvaIA.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CriarProvaIA = () => {\n  _s();\n  const [tema, setTema] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const gerarProva = async () => {\n    if (!tema.trim()) {\n      setMensagem('Por favor, insira um tema.');\n      return;\n    }\n\n    // 游댳 Pegar o ID do usu치rio logado no localStorage\n    const usuarioSalvo = localStorage.getItem('usuario');\n    if (!usuarioSalvo) {\n      setMensagem('Usu치rio n칚o est치 logado.');\n      return;\n    }\n    const usuario = JSON.parse(usuarioSalvo);\n    const criadorId = usuario.id;\n    try {\n      setCarregando(true);\n      setMensagem('Gerando prova com IA...');\n      const response = await fetch('/api/provas/gerar-ia', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          titulo: `Prova de - ${tema}`,\n          tema: tema,\n          criadorId: criadorId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao gerar prova');\n      }\n      const data = await response.json();\n      setMensagem(`Prova \"${data.titulo}\" criada com sucesso!`);\n      setTema('');\n    } catch (error) {\n      console.error(error);\n      setMensagem('Erro ao gerar a prova.');\n    } finally {\n      setCarregando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCD8 Criar Prova com IA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Digite um tema para gerar uma nova prova automaticamente.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ex: Revolu\\xE7\\xE3o Francesa\",\n      value: tema,\n      onChange: e => setTema(e.target.value),\n      style: {\n        padding: '10px',\n        width: '100%',\n        marginBottom: '15px',\n        borderRadius: '8px',\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gerarProva,\n      disabled: carregando,\n      children: carregando ? 'Gerando...' : 'Gerar Prova'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '15px',\n        color: '#333'\n      },\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CriarProvaIA, \"qXp3Rso5Q1Lo1ar310TeTVx9x3c=\");\n_c = CriarProvaIA;\nexport default CriarProvaIA;\nvar _c;\n$RefreshReg$(_c, \"CriarProvaIA\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CriarProvaIA","_s","tema","setTema","mensagem","setMensagem","carregando","setCarregando","gerarProva","trim","usuarioSalvo","localStorage","getItem","usuario","JSON","parse","criadorId","id","response","fetch","method","headers","body","stringify","titulo","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","padding","width","marginBottom","borderRadius","border","onClick","disabled","marginTop","color","_c","$RefreshReg$"],"sources":["/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/CriarProvaIA.jsx"],"sourcesContent":["// src/components/CriarProvaIA.jsx\nimport React, { useState } from 'react';\n\nconst CriarProvaIA = () => {\n  const [tema, setTema] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n\n  const gerarProva = async () => {\n    if (!tema.trim()) {\n      setMensagem('Por favor, insira um tema.');\n      return;\n    }\n\n    // 游댳 Pegar o ID do usu치rio logado no localStorage\n    const usuarioSalvo = localStorage.getItem('usuario');\n    if (!usuarioSalvo) {\n      setMensagem('Usu치rio n칚o est치 logado.');\n      return;\n    }\n\n    const usuario = JSON.parse(usuarioSalvo);\n    const criadorId = usuario.id;\n\n    try {\n      setCarregando(true);\n      setMensagem('Gerando prova com IA...');\n\n      const response = await fetch('/api/provas/gerar-ia', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          titulo: `Prova de - ${tema}`,\n          tema: tema,\n          criadorId: criadorId\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erro ao gerar prova');\n      }\n\n      const data = await response.json();\n      setMensagem(`Prova \"${data.titulo}\" criada com sucesso!`);\n      setTema('');\n    } catch (error) {\n      console.error(error);\n      setMensagem('Erro ao gerar a prova.');\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  return (\n    <div className=\"dashboard-card\">\n      <h3>游닂 Criar Prova com IA</h3>\n      <p>Digite um tema para gerar uma nova prova automaticamente.</p>\n      <input\n        type=\"text\"\n        placeholder=\"Ex: Revolu칞칚o Francesa\"\n        value={tema}\n        onChange={(e) => setTema(e.target.value)}\n        style={{\n          padding: '10px',\n          width: '100%',\n          marginBottom: '15px',\n          borderRadius: '8px',\n          border: '1px solid #ccc',\n        }}\n      />\n      <button onClick={gerarProva} disabled={carregando}>\n        {carregando ? 'Gerando...' : 'Gerar Prova'}\n      </button>\n      {mensagem && <p style={{ marginTop: '15px', color: '#333' }}>{mensagem}</p>}\n    </div>\n  );\n};\n\nexport default CriarProvaIA;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}