{"ast":null,"code":"var _jsxFileName = \"/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/CriarProvaIA.jsx\",\n  _s = $RefreshSig$();\n// src/components/CriarProvaIA.jsx\nimport React, { useState } from 'react';\nimport './CriarProvaIA.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CriarProvaIA = () => {\n  _s();\n  const [tema, setTema] = useState('');\n  const [titulo, setTitulo] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const handleCriarProva = async () => {\n    const usuario = JSON.parse(localStorage.getItem('usuario'));\n    if (!usuario || !usuario.id) {\n      setMensagem('Usuário não autenticado. Faça login novamente.');\n      return;\n    }\n    const provaDTO = {\n      tema,\n      titulo,\n      professorId: usuario.id\n    };\n    try {\n      const response = await fetch('/api/provas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(provaDTO)\n      });\n      if (response.ok) {\n        setMensagem('✅ Prova criada com sucesso!');\n        setTema('');\n        setTitulo('');\n      } else {\n        const texto = await response.text();\n        setMensagem(`Erro: ${texto}`);\n      }\n    } catch (err) {\n      console.error(err);\n      setMensagem('Erro ao criar a prova.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"criar-prova-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"criar-prova-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u2728 Criar Nova Prova com IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"titulo\",\n        children: \"T\\xEDtulo da Prova\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"titulo\",\n        placeholder: \"Ex: Prova ENEM - Matem\\xE1tica\",\n        value: titulo,\n        onChange: e => setTitulo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tema\",\n        children: \"Tema (ex: Biologia, Hist\\xF3ria, etc)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tema\",\n        placeholder: \"Digite o tema das quest\\xF5es\",\n        value: tema,\n        onChange: e => setTema(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"criar-prova-btn\",\n        onClick: handleCriarProva,\n        children: \"Gerar Prova com IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mensagem\",\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CriarProvaIA, \"GRRr8QmPTbpnUP36vR19+ZJxRMQ=\");\n_c = CriarProvaIA;\nexport default CriarProvaIA;\nvar _c;\n$RefreshReg$(_c, \"CriarProvaIA\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CriarProvaIA","_s","tema","setTema","titulo","setTitulo","mensagem","setMensagem","handleCriarProva","usuario","JSON","parse","localStorage","getItem","id","provaDTO","professorId","response","fetch","method","headers","body","stringify","ok","texto","text","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/CriarProvaIA.jsx"],"sourcesContent":["// src/components/CriarProvaIA.jsx\nimport React, { useState } from 'react';\nimport './CriarProvaIA.css';\n\nconst CriarProvaIA = () => {\n  const [tema, setTema] = useState('');\n  const [titulo, setTitulo] = useState('');\n  const [mensagem, setMensagem] = useState('');\n\n  const handleCriarProva = async () => {\n    const usuario = JSON.parse(localStorage.getItem('usuario'));\n\n    if (!usuario || !usuario.id) {\n      setMensagem('Usuário não autenticado. Faça login novamente.');\n      return;\n    }\n\n    const provaDTO = {\n      tema,\n      titulo,\n      professorId: usuario.id\n    };\n\n    try {\n      const response = await fetch('/api/provas', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(provaDTO)\n      });\n\n      if (response.ok) {\n        setMensagem('✅ Prova criada com sucesso!');\n        setTema('');\n        setTitulo('');\n      } else {\n        const texto = await response.text();\n        setMensagem(`Erro: ${texto}`);\n      }\n    } catch (err) {\n      console.error(err);\n      setMensagem('Erro ao criar a prova.');\n    }\n  };\n\n  return (\n    <div className=\"criar-prova-container\">\n      <div className=\"criar-prova-box\">\n        <h2>✨ Criar Nova Prova com IA</h2>\n\n        <label htmlFor=\"titulo\">Título da Prova</label>\n        <input\n          type=\"text\"\n          id=\"titulo\"\n          placeholder=\"Ex: Prova ENEM - Matemática\"\n          value={titulo}\n          onChange={(e) => setTitulo(e.target.value)}\n        />\n\n        <label htmlFor=\"tema\">Tema (ex: Biologia, História, etc)</label>\n        <input\n          type=\"text\"\n          id=\"tema\"\n          placeholder=\"Digite o tema das questões\"\n          value={tema}\n          onChange={(e) => setTema(e.target.value)}\n        />\n\n        <button className=\"criar-prova-btn\" onClick={handleCriarProva}>\n          Gerar Prova com IA\n        </button>\n\n        {mensagem && <p className=\"mensagem\">{mensagem}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default CriarProvaIA;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE3D,IAAI,CAACJ,OAAO,IAAI,CAACA,OAAO,CAACK,EAAE,EAAE;MAC3BP,WAAW,CAAC,gDAAgD,CAAC;MAC7D;IACF;IAEA,MAAMQ,QAAQ,GAAG;MACfb,IAAI;MACJE,MAAM;MACNY,WAAW,EAAEP,OAAO,CAACK;IACvB,CAAC;IAED,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEX,IAAI,CAACY,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACM,EAAE,EAAE;QACfhB,WAAW,CAAC,6BAA6B,CAAC;QAC1CJ,OAAO,CAAC,EAAE,CAAC;QACXE,SAAS,CAAC,EAAE,CAAC;MACf,CAAC,MAAM;QACL,MAAMmB,KAAK,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACnClB,WAAW,CAAC,SAASiB,KAAK,EAAE,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBnB,WAAW,CAAC,wBAAwB,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA;IAAK8B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpC/B,OAAA;MAAK8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B/B,OAAA;QAAA+B,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElCnC,OAAA;QAAOoC,OAAO,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/CnC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXtB,EAAE,EAAC,QAAQ;QACXuB,WAAW,EAAC,gCAA6B;QACzCC,KAAK,EAAElC,MAAO;QACdmC,QAAQ,EAAGC,CAAC,IAAKnC,SAAS,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eAEFnC,OAAA;QAAOoC,OAAO,EAAC,MAAM;QAAAL,QAAA,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChEnC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXtB,EAAE,EAAC,MAAM;QACTuB,WAAW,EAAC,+BAA4B;QACxCC,KAAK,EAAEpC,IAAK;QACZqC,QAAQ,EAAGC,CAAC,IAAKrC,OAAO,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAEFnC,OAAA;QAAQ8B,SAAS,EAAC,iBAAiB;QAACa,OAAO,EAAElC,gBAAiB;QAAAsB,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAER5B,QAAQ,iBAAIP,OAAA;QAAG8B,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAExB;MAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CAvEID,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAyElB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}