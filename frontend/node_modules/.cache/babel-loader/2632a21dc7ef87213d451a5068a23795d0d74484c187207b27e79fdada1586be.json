{"ast":null,"code":"var _jsxFileName = \"/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/ResponderProvaPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/ResponderProvaPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ResponderProvaPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponderProvaPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // ID da prova na URL\n  const [prova, setProva] = useState(null);\n  const [respostas, setRespostas] = useState({});\n  useEffect(() => {\n    const fetchProva = async () => {\n      try {\n        const response = await fetch(`/api/provas/${id}`);\n        const data = await response.json();\n        setProva(data);\n      } catch (error) {\n        console.error('Erro ao buscar prova:', error);\n      }\n    };\n    fetchProva();\n  }, [id]);\n  const handleSelecionarAlternativa = (idQuestao, idAlternativa) => {\n    setRespostas(prev => ({\n      ...prev,\n      [idQuestao]: idAlternativa\n    }));\n  };\n  const handleEnviarRespostas = async () => {\n    try {\n      for (const [idQuestao, idAlternativa] of Object.entries(respostas)) {\n        await fetch('/api/respostas', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            alunoId: 1,\n            // por enquanto fixo — vamos pegar do login depois\n            provaId: parseInt(id),\n            questaoId: parseInt(idQuestao),\n            respostaMarcada: idAlternativa\n          })\n        });\n      }\n      alert('Respostas enviadas com sucesso!');\n    } catch (error) {\n      console.error('Erro ao enviar respostas:', error);\n      alert('Erro ao enviar respostas.');\n    }\n  };\n  if (!prova) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando prova...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prova-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: prova.titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), prova.questoes.map(questao => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questao-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questao.enunciado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternativas\",\n        children: questao.alternativas.map(alt => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"alternativa-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `questao-${questao.id}`,\n            value: alt.id,\n            checked: respostas[questao.id] === alt.id,\n            onChange: () => handleSelecionarAlternativa(questao.id, alt.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), alt.texto]\n        }, alt.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, questao.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"enviar-button\",\n      onClick: handleEnviarRespostas,\n      children: \"Enviar Respostas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponderProvaPage, \"aXKl9iIkRS3aPogMrRveanqK/uw=\", false, function () {\n  return [useParams];\n});\n_c = ResponderProvaPage;\nexport default ResponderProvaPage;\nvar _c;\n$RefreshReg$(_c, \"ResponderProvaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ResponderProvaPage","_s","id","prova","setProva","respostas","setRespostas","fetchProva","response","fetch","data","json","error","console","handleSelecionarAlternativa","idQuestao","idAlternativa","prev","handleEnviarRespostas","Object","entries","method","headers","body","JSON","stringify","alunoId","provaId","parseInt","questaoId","respostaMarcada","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","titulo","questoes","map","questao","enunciado","alternativas","alt","type","name","value","checked","onChange","texto","onClick","_c","$RefreshReg$"],"sources":["/home/diego-silva/Documentos/avaliador-inteligente/frontend/src/components/ResponderProvaPage.jsx"],"sourcesContent":["// src/components/ResponderProvaPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ResponderProvaPage.css';\n\nconst ResponderProvaPage = () => {\n  const { id } = useParams(); // ID da prova na URL\n  const [prova, setProva] = useState(null);\n  const [respostas, setRespostas] = useState({});\n\n  useEffect(() => {\n    const fetchProva = async () => {\n      try {\n        const response = await fetch(`/api/provas/${id}`);\n        const data = await response.json();\n        setProva(data);\n      } catch (error) {\n        console.error('Erro ao buscar prova:', error);\n      }\n    };\n\n    fetchProva();\n  }, [id]);\n\n  const handleSelecionarAlternativa = (idQuestao, idAlternativa) => {\n    setRespostas((prev) => ({\n      ...prev,\n      [idQuestao]: idAlternativa\n    }));\n  };\n\n  const handleEnviarRespostas = async () => {\n    try {\n      for (const [idQuestao, idAlternativa] of Object.entries(respostas)) {\n        await fetch('/api/respostas', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            alunoId: 1, // por enquanto fixo — vamos pegar do login depois\n            provaId: parseInt(id),\n            questaoId: parseInt(idQuestao),\n            respostaMarcada: idAlternativa\n          })\n        });\n      }\n      alert('Respostas enviadas com sucesso!');\n    } catch (error) {\n      console.error('Erro ao enviar respostas:', error);\n      alert('Erro ao enviar respostas.');\n    }\n  };\n\n  if (!prova) return <p>Carregando prova...</p>;\n\n  return (\n    <div className=\"prova-container\">\n      <h1>{prova.titulo}</h1>\n\n      {prova.questoes.map((questao) => (\n        <div key={questao.id} className=\"questao-box\">\n          <h3>{questao.enunciado}</h3>\n          <div className=\"alternativas\">\n            {questao.alternativas.map((alt) => (\n              <label key={alt.id} className=\"alternativa-label\">\n                <input\n                  type=\"radio\"\n                  name={`questao-${questao.id}`}\n                  value={alt.id}\n                  checked={respostas[questao.id] === alt.id}\n                  onChange={() => handleSelecionarAlternativa(questao.id, alt.id)}\n                />\n                {alt.texto}\n              </label>\n            ))}\n          </div>\n        </div>\n      ))}\n\n      <button className=\"enviar-button\" onClick={handleEnviarRespostas}>\n        Enviar Respostas\n      </button>\n    </div>\n  );\n};\n\nexport default ResponderProvaPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}